/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package yblts;




import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Aerole
 */



public class EmployeeSearch extends javax.swing.JDialog {
    
    /**
     * Creates new form EmployeeSearch
     */
    
    
    
     DefaultTableModel dtm = new DefaultTableModel();
     String nameS;
     
    public EmployeeSearch(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadEmployee();
        txtEmpSearchID.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabEmpSearch = new javax.swing.JTable();
        txtEmpNameS = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        txtEmpSearchID = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(java.awt.Color.white);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 600));

        tabEmpSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabEmpSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabEmpSearchMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabEmpSearch);

        txtEmpNameS.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtEmpNameS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmpNameSKeyTyped(evt);
            }
        });

        btnOK.setBackground(new java.awt.Color(255, 255, 255));
        btnOK.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        txtEmpSearchID.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtEmpSearchID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtEmpSearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpSearchIDActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yblts/Search2.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(txtEmpNameS, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEmpSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOK)))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 944, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmpNameS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmpSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOK))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
     
     String id  = txtEmpSearchID.getText().toString();
     
     Dependents as = new Dependents();
     as.getTxtEmpID().setText(id);
     as.getTxtBoxDepID().setText(id + "-");
     as.getTxtBoxDepID().setEnabled(true);
     as.getTxtBoxDepFName().setEnabled(true);
     as.getTxtBoxDepMName().setEnabled(true);
     as.getTxtBoxDepLName().setEnabled(true);
     as.getTxtBoxDepRelation().setEnabled(true);
     this.dispose();
     as.setVisible(true);
    }//GEN-LAST:event_btnOKActionPerformed

    private void tabEmpSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabEmpSearchMouseClicked
        txtEmpSearchID.setText(dtm.getValueAt(tabEmpSearch.getSelectedRow(),0).toString());
    }//GEN-LAST:event_tabEmpSearchMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        nameS = txtEmpNameS.getText().toString().trim();
        displayTableSearch();
        txtEmpNameS.setText(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtEmpSearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpSearchIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpSearchIDActionPerformed

    private void txtEmpNameSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpNameSKeyTyped
       search();
    }//GEN-LAST:event_txtEmpNameSKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EmployeeSearch dialog = new EmployeeSearch(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabEmpSearch;
    private javax.swing.JTextField txtEmpNameS;
    public javax.swing.JTextField txtEmpSearchID;
    // End of variables declaration//GEN-END:variables

    private void loadEmployee() {
     YBLTSconnectionDB d = new YBLTSconnectionDB();
     d.main();
  
    Statement stmt = null;
    String sql;  
    String stats = null;    
    try {
            stmt=d.conn.createStatement();
           sql="SELECT Employee_ID,Employee_Fname,Employee_Mname,Emp_Lname,Job_Description FROM employee WHERE Status IS NULL ";
             
            ResultSet rs = stmt.executeQuery(sql);
            
             dtm = new DefaultTableModel();
             tabEmpSearch.setModel(dtm);
             dtm.addColumn("Employee ID");
             dtm.addColumn("First Name");
             dtm.addColumn("Middle Name");
             dtm.addColumn("Last Name");
             dtm.addColumn("Job Description");
             
             while(rs.next()){
               Object[] ob = {
               rs.getString("Employee_ID"),
               rs.getString("Employee_Fname"),
               rs.getString("Employee_Mname"),
               rs.getString("Emp_Lname") ,     
                rs.getString("Job_Description")     
               };
               dtm.addRow(ob);
               
             }
        } catch (SQLException ex) {
            Logger.getLogger(yblts.Employee.class.getName()).log(Level.SEVERE, null, ex);
        }     
    }

    private void displayTableSearch() {
    YBLTSconnectionDB d = new YBLTSconnectionDB();
     d.main();
  
     
    Statement stmt = null;
    String sql;  
    String stats = null;    
    try {
            stmt=d.conn.createStatement();
            sql="SELECT Employee_ID,Employee_Fname,Employee_Mname,Emp_Lname,Job_Description FROM employee WHERE Emp_Lname LIKE '"+txtEmpNameS.getText().toString()+"%' AND Status IS NULL  ";
            
            
            ResultSet rs = stmt.executeQuery(sql);
             
             dtm = new DefaultTableModel();
             tabEmpSearch.setModel(dtm);
             dtm.addColumn("Employee ID");
             dtm.addColumn("First Name");
             dtm.addColumn("Middle Name");
             dtm.addColumn("Last Name");
             dtm.addColumn("Job Description");
             
             while(rs.next()){
               Object[] ob = {
               rs.getString("Employee_ID"),
               rs.getString("Employee_Fname"),
               rs.getString("Employee_Mname"),
               rs.getString("Emp_Lname") ,     
                rs.getString("Job_Description")     
               };
               dtm.addRow(ob);
               
             }
        } catch (SQLException ex) {
            Logger.getLogger(yblts.Employee.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
   public String EmpId_return(){
      String empID;
      empID = txtEmpSearchID.getText();
      return empID;
    }

    private void search() {
       String searchN = txtEmpNameS.getText();
      // String searchID = txtEmpNameS.getText();
        YBLTSconnectionDB d = new YBLTSconnectionDB();
          d.main();
  
     
    Statement stmt = null;
    String sql;  
    String stats = null;   
    try {
            stmt=d.conn.createStatement();
            sql="SELECT Employee_ID,Employee_Fname,Employee_Mname,Emp_Lname,Job_Description  FROM employee WHERE (Emp_Lname LIKE '%"+searchN+"%' OR Employee_Fname LIKE '%"+searchN+"%')  AND Status IS NULL  ";
            
            
            ResultSet rs = stmt.executeQuery(sql);
             
             dtm = new DefaultTableModel();
             tabEmpSearch.setModel(dtm);
             dtm.addColumn("Employee ID");
             dtm.addColumn("First Name");
             dtm.addColumn("Middle Name");
             dtm.addColumn("Last Name");
             dtm.addColumn("Job Description");
             
             while(rs.next()){
               Object[] ob = {
               rs.getString("Employee_ID"),
               rs.getString("Employee_Fname"),
               rs.getString("Employee_Mname"),
               rs.getString("Emp_Lname") ,     
                rs.getString("Job_Description")     
               };
               dtm.addRow(ob);
               
             }
        } catch (SQLException ex) {
            Logger.getLogger(yblts.Employee.class.getName()).log(Level.SEVERE, null, ex);
        }        
    
    
    
    }
}
