/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package yblts;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import yblts.YBLTSconnectionDB;

/**
 *
 * @author rampola-ma
 */
public class Cargo extends javax.swing.JFrame {
DefaultTableModel dtm = new DefaultTableModel();
int transaction = 0;
String status = "DELETED";
String nameS;

    /**
     * Creates new form Cargo
     */
    public Cargo() {
        initComponents();
        displayTable();
        txtCargoCode.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnCargoSearch = new javax.swing.JButton();
        txtCargoCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCargo = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtCargoType = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnCargoSave = new javax.swing.JButton();
        btnCargoDelete = new javax.swing.JButton();
        btnCargoExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1360, 720));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cargo Form", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 3, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));

        btnCargoSearch.setBackground(new java.awt.Color(255, 255, 255));
        btnCargoSearch.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnCargoSearch.setForeground(new java.awt.Color(37, 18, 133));
        btnCargoSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yblts/Search2.png"))); // NOI18N
        btnCargoSearch.setName("btnCargoSearch"); // NOI18N
        btnCargoSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargoSearchActionPerformed(evt);
            }
        });

        txtCargoCode.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtCargoCode.setForeground(new java.awt.Color(37, 18, 133));
        txtCargoCode.setEnabled(false);
        txtCargoCode.setName("txtCargoCode"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(37, 18, 133));
        jLabel2.setText("Cargo Rate/kg:");

        txtWeight.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtWeight.setForeground(new java.awt.Color(37, 18, 133));
        txtWeight.setName("txtWeight"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(37, 18, 133));
        jLabel1.setText("Cargo Code:");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblCargo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblCargo.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tblCargo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cargo Code", "Cargo Rate/Kilogram", "Cargo Type"
            }
        ));
        tblCargo.setName("tblCargo"); // NOI18N
        tblCargo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCargoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCargo);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(37, 18, 133));
        jLabel4.setText("Cargo Type:");

        txtCargoType.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtCargoType.setForeground(new java.awt.Color(37, 18, 133));
        txtCargoType.setName("txtCargoType"); // NOI18N

        jLabel8.setFont(new java.awt.Font("Showcard Gothic", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yblts/images.jpg"))); // NOI18N
        jLabel8.setText("YBL Ticketing System");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.lightGray, null, null));

        btnCargoSave.setBackground(new java.awt.Color(255, 255, 255));
        btnCargoSave.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnCargoSave.setForeground(new java.awt.Color(37, 18, 133));
        btnCargoSave.setText("Save");
        btnCargoSave.setName("btnCargoSave"); // NOI18N
        btnCargoSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargoSaveActionPerformed(evt);
            }
        });

        btnCargoDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnCargoDelete.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnCargoDelete.setForeground(new java.awt.Color(37, 18, 133));
        btnCargoDelete.setText("Delete");
        btnCargoDelete.setName("btnCargoDelete"); // NOI18N
        btnCargoDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargoDeleteActionPerformed(evt);
            }
        });

        btnCargoExit.setBackground(new java.awt.Color(255, 255, 255));
        btnCargoExit.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnCargoExit.setForeground(new java.awt.Color(37, 18, 133));
        btnCargoExit.setText("Exit");
        btnCargoExit.setName("btnCargoExit"); // NOI18N
        btnCargoExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargoExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCargoSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCargoDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCargoExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargoExit)
                    .addComponent(btnCargoSave)
                    .addComponent(btnCargoDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(30, 30, 30))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(38, 38, 38)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtCargoType)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnCargoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtCargoCode, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(47, 47, 47))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(365, 365, 365)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCargoCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCargoType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(btnCargoSearch))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1414, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargoExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargoExitActionPerformed
        Home as = new Home();
        as.setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCargoExitActionPerformed

    private void btnCargoDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargoDeleteActionPerformed
        int x = tblCargo.getSelectedRow();
        if(txtCargoType.getText().length()>0
                 &&txtWeight.getText().length()>0)
        {
        deleteCargo(dtm.getValueAt(x,0).toString());
        dtm.removeRow(tblCargo.getSelectedRow());
        clearFields();
        txtCargoCode.setEnabled(true);
        }
        
        else{JOptionPane.showMessageDialog(null,"Select row from table to delete!"); }
    }//GEN-LAST:event_btnCargoDeleteActionPerformed

    private void btnCargoSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargoSaveActionPerformed
        if (transaction==1)
        { 
        if(txtCargoType.getText().length()>0
                 &&txtWeight.getText().length()>0)
        {
        updateCargo();
        clearFields();
        displayTable();
        txtCargoCode.setEnabled(true);
        transaction=0;
        }
         else{
          JOptionPane.showMessageDialog(null,"Some Fields Are Empty");   
         }
        }
        
        else
        {       
       if(txtCargoType.getText().length()>0
                 &&txtWeight.getText().length()>0)
       {
         addCargo();
         displayTable(); 
         
         }
         else{
          JOptionPane.showMessageDialog(null,"Some Fields Are Empty");   
         }
       
        }
    }//GEN-LAST:event_btnCargoSaveActionPerformed

    private void tblCargoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCargoMouseClicked
       transaction=1;
       txtCargoCode.setText(dtm.getValueAt(tblCargo.getSelectedRow(),0).toString());
       txtCargoType.setText(dtm.getValueAt(tblCargo.getSelectedRow(),1).toString());
       txtWeight.setText(dtm.getValueAt(tblCargo.getSelectedRow(),2).toString());
       txtCargoCode.setEnabled(false);
    }//GEN-LAST:event_tblCargoMouseClicked

    private void btnCargoSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargoSearchActionPerformed
       nameS = txtCargoType.getText().toString().trim();
       displayTableSearch();
       clearFields();
    }//GEN-LAST:event_btnCargoSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cargo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargoDelete;
    private javax.swing.JButton btnCargoExit;
    private javax.swing.JButton btnCargoSave;
    private javax.swing.JButton btnCargoSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCargo;
    private javax.swing.JTextField txtCargoCode;
    private javax.swing.JTextField txtCargoType;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

    private void addCargo() {
       
        String weight = txtWeight.getText();
        String type= txtCargoType.getText();

        
        YBLTSconnectionDB d = new YBLTSconnectionDB();
        d.main();
        Statement stmt = null;
        String sql;
        
        try{
        stmt=d.conn.createStatement();
        sql="SELECT * FROM cargo WHERE cargo_type = '"+type+"' AND Status IS NULL ORDER BY cargo_type";
        ResultSet rs = stmt.executeQuery(sql);
        
        if(!rs.isBeforeFirst())
        {
          stmt=d.conn.createStatement();
          sql="INSERT INTO `yellowbusdb`.`cargo`(`cargo_cost`,`cargo_type`)VALUES('"+weight+"','"+type+"');";
         
          int success = stmt.executeUpdate(sql);
          clearFields();
          if(success==1){
          System.out.println("success");
          }
          
        }
        
        else{
        JOptionPane.showMessageDialog(null,"Duplicate Cargo type!");
        txtCargoType.setText(null);
        txtCargoType.requestFocus();
        }
        }catch(SQLException ex) {
              Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
              } 
    }

    private void displayTable() {
        YBLTSconnectionDB d = new YBLTSconnectionDB();
     d.main();
  
    Statement stmt = null;
    String sql;  
        
    try {
            stmt=d.conn.createStatement();
             sql="SELECT cargo_code,cargo_type, cargo_cost FROM cargo WHERE Status IS NULL ORDER BY cargo_type";
             ResultSet rs = stmt.executeQuery(sql);
             
             dtm = new DefaultTableModel();
             tblCargo.setModel(dtm);
             dtm.addColumn("Cargo Code");
             dtm.addColumn("Cargo Type");
             dtm.addColumn("Cargo Rate");
            
             

             
             
             while(rs.next()){
               Object[] ob = {
               rs.getString("cargo_code"),
               rs.getString("cargo_type"),
               rs.getString("cargo_cost")
                    
               };
               dtm.addRow(ob);
               
             }
        } catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }

    private void clearFields() {
        txtCargoCode.setText(null);
        txtWeight.setText(null);
        txtCargoType.setText(null);

    }

    private void updateCargo() {
         int x = tblCargo.getSelectedRow();
        String PK = dtm.getValueAt(x,0).toString(); 
        String code = txtCargoCode.getText();
        String weight = txtWeight.getText();
        String type = txtCargoType.getText();
        
        YBLTSconnectionDB d = new YBLTSconnectionDB();
        d.main();
        PreparedStatement stmt = null;
        String sql;

        try {
         sql = "UPDATE `yellowbusdb`.`cargo` SET `cargo_cost`=?,`cargo_type`=?,`cargo_code`=? WHERE `cargo_code`=?";
         stmt = d.conn.prepareStatement(sql);   
         
         
         stmt.setString(1, weight);
         stmt.setString(2, type);
         stmt.setString(3, code);
         stmt.setString(4, PK);
    
         int success = stmt.executeUpdate();
         if (success == 1) {
        System.out.println("success");
         dtm.setValueAt(PK, tblCargo.getSelectedRow(), 0);       
         dtm.setValueAt(weight, tblCargo.getSelectedRow(), 1);
         dtm.setValueAt(type, tblCargo.getSelectedRow(), 2);
         
        }}catch (SQLException ex) {
        Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void deleteCargo(String toString) {
         String[] buttons = {"YES","NO"};
    int returnValue = JOptionPane.showOptionDialog(null,"Do You Want To Delete The Records?", "NARRATIVE",
            JOptionPane.WARNING_MESSAGE,0,null,buttons,buttons);
    System.out.print(returnValue);

    if(returnValue==JOptionPane.YES_OPTION){ 
    
        int x = tblCargo.getSelectedRow();
        String PK = dtm.getValueAt(x,0).toString(); 
        String code = txtCargoCode.getText();
        String weight = txtWeight.getText();
        String type = txtCargoType.getText();
        
        
        YBLTSconnectionDB d = new YBLTSconnectionDB();
        d.main();
        PreparedStatement stmt = null;
        String sql;
        

        try {
       sql = "UPDATE `yellowbusdb`.`cargo` SET `cargo_cost`=?,`cargo_type`=?,`cargo_code`=?, `Status`=? WHERE `cargo_code`=?";      
        
       stmt = d.conn.prepareStatement(sql);   
         
         
         stmt.setString(1, weight);
         stmt.setString(2, type);
         stmt.setString(3, code);
         stmt.setString(4, status);
         stmt.setString(5, PK);
         
         int success = stmt.executeUpdate();
        
        }catch (SQLException ex) {
        Logger.getLogger(yblts.Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
      else{
        this.dispose();
        yblts.Bus as = new yblts.Bus();
        as.setVisible(true);
    }
    }

    private void displayTableSearch() {
    YBLTSconnectionDB d = new YBLTSconnectionDB();
    d.main();
    Statement stmt = null;
    String sql;  
    String stats = null;    
    try {
            stmt=d.conn.createStatement();
           sql="SELECT cargo_code, cargo_type, cargo_cost FROM cargo WHERE cargo_type LIKE  '"+txtCargoType.getText().toString()+"%' AND Status IS NULL ORDER BY cargo_type";
           ResultSet rs = stmt.executeQuery(sql);
             
             dtm = new DefaultTableModel();
             tblCargo.setModel(dtm);
             dtm.addColumn("Cargo Code");
             dtm.addColumn("Cargo Type");
             dtm.addColumn("Cargo Rate");
            
             

             
             
             while(rs.next()){
               Object[] ob = {
               rs.getString("cargo_code"),
               rs.getString("cargo_type"),
               rs.getString("cargo_cost")
                    
               };
               dtm.addRow(ob);
               
             }
        } catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }  
       
    
    }
}
