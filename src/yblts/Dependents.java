/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package yblts;


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author rampola-ma
 */
public class Dependents extends javax.swing.JFrame {
    
    DefaultTableModel dtm = new DefaultTableModel();
int transaction = 0;
String status = "DELETED";
String nameS;
String ans ;
int flag = 0;
    /**
     * Creates new form Dependents
     */



    public Dependents() {
        initComponents();
        displayTable();
        txtEmpID.setEnabled(false);
        
        
        if (flag ==0) setViewFalse();
        else          setViewTrue();
        
        
    
    }
    

    public JTextField getTxtBoxDepFName() {
        return txtBoxDepFName;
    }

    public void setTxtBoxDepFName(JTextField txtBoxDepFName) {
        this.txtBoxDepFName = txtBoxDepFName;
    }

    public JTextField getTxtBoxDepID() {
        return txtBoxDepID;
    }

    public void setTxtBoxDepID(JTextField txtBoxDepID) {
        this.txtBoxDepID = txtBoxDepID;
    }

    public JTextField getTxtBoxDepLName() {
        return txtBoxDepLName;
    }

    public void setTxtBoxDepLName(JTextField txtBoxDepLName) {
        this.txtBoxDepLName = txtBoxDepLName;
    }

    public JTextField getTxtBoxDepMName() {
        return txtBoxDepMName;
    }

    public void setTxtBoxDepMName(JTextField txtBoxDepMName) {
        this.txtBoxDepMName = txtBoxDepMName;
    }

    public JTextField getTxtBoxDepRelation() {
        return txtBoxDepRelation;
    }

    public void setTxtBoxDepRelation(JTextField txtBoxDepRelation) {
        this.txtBoxDepRelation = txtBoxDepRelation;
    }
    

    public JTextField getTxtEmpID() {
        return txtEmpID;
    }

    public void setTxtEmpID(JTextField txtEmpID) {
        this.txtEmpID = txtEmpID;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtBoxDepLName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDependents = new javax.swing.JTable();
        txtBoxDepID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBoxDepFName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtBoxDepRelation = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnDepSearch = new javax.swing.JButton();
        txtBoxDepMName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnDepSave = new javax.swing.JButton();
        btnDepDelete = new javax.swing.JButton();
        btnDepExit = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnEmpIDSearch = new javax.swing.JButton();
        txtEmpID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dependent Form", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 3, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));

        txtBoxDepLName.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtBoxDepLName.setForeground(new java.awt.Color(37, 18, 133));
        txtBoxDepLName.setName("txtBoxDepLName"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(37, 18, 133));
        jLabel4.setText("Last Name:");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblDependents.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tblDependents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "First Name", "Middle Name", "Last Name", "Employee ID", "Relation"
            }
        ));
        tblDependents.setName("tblDependents"); // NOI18N
        tblDependents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDependentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDependents);

        txtBoxDepID.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtBoxDepID.setForeground(new java.awt.Color(37, 18, 133));
        txtBoxDepID.setName("txtBoxDepID"); // NOI18N
        txtBoxDepID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBoxDepIDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(37, 18, 133));
        jLabel1.setText("ID:");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(37, 18, 133));
        jLabel6.setText("Relation:");

        txtBoxDepFName.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtBoxDepFName.setForeground(new java.awt.Color(37, 18, 133));
        txtBoxDepFName.setName("txtBoxDepFName"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(37, 18, 133));
        jLabel3.setText("Middle Name:");

        txtBoxDepRelation.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtBoxDepRelation.setForeground(new java.awt.Color(37, 18, 133));
        txtBoxDepRelation.setName("txtBoxDepRelation"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(37, 18, 133));
        jLabel2.setText("First Name:");

        btnDepSearch.setBackground(new java.awt.Color(255, 255, 255));
        btnDepSearch.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnDepSearch.setForeground(new java.awt.Color(37, 18, 133));
        btnDepSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yblts/Search2.png"))); // NOI18N
        btnDepSearch.setName("btnDepSearch"); // NOI18N
        btnDepSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepSearchActionPerformed(evt);
            }
        });

        txtBoxDepMName.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtBoxDepMName.setForeground(new java.awt.Color(37, 18, 133));
        txtBoxDepMName.setName("txtBoxDepMName"); // NOI18N

        jLabel7.setFont(new java.awt.Font("Showcard Gothic", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yblts/images.jpg"))); // NOI18N
        jLabel7.setText("YBL Ticketing System");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.gray, null, null));

        btnDepSave.setBackground(new java.awt.Color(255, 255, 255));
        btnDepSave.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnDepSave.setForeground(new java.awt.Color(37, 18, 133));
        btnDepSave.setText("Save");
        btnDepSave.setName("btnDepSave"); // NOI18N
        btnDepSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepSaveActionPerformed(evt);
            }
        });

        btnDepDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDepDelete.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnDepDelete.setForeground(new java.awt.Color(37, 18, 133));
        btnDepDelete.setText("Delete");
        btnDepDelete.setName("btnDepDelete"); // NOI18N
        btnDepDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepDeleteActionPerformed(evt);
            }
        });

        btnDepExit.setBackground(new java.awt.Color(255, 255, 255));
        btnDepExit.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnDepExit.setForeground(new java.awt.Color(37, 18, 133));
        btnDepExit.setText("Exit");
        btnDepExit.setName("btnDepExit"); // NOI18N
        btnDepExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDepSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDepDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDepExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDepSave)
                    .addComponent(btnDepDelete)
                    .addComponent(btnDepExit))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(37, 18, 133));
        jLabel8.setText("Employee ID:");

        btnEmpIDSearch.setBackground(new java.awt.Color(255, 255, 255));
        btnEmpIDSearch.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnEmpIDSearch.setForeground(new java.awt.Color(37, 18, 133));
        btnEmpIDSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yblts/Search2.png"))); // NOI18N
        btnEmpIDSearch.setName("btnDepSearch"); // NOI18N
        btnEmpIDSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpIDSearchActionPerformed(evt);
            }
        });

        txtEmpID.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtEmpID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtEmpID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 868, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel4))
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBoxDepRelation)
                                    .addComponent(txtBoxDepMName)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtBoxDepLName, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDepSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtBoxDepID, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtBoxDepFName, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEmpIDSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(420, 420, 420)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                        .addGap(304, 304, 304)))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEmpIDSearch, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtBoxDepID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtBoxDepFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtBoxDepMName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtBoxDepLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnDepSearch)))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtBoxDepRelation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE))
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1381, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void btnDepSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepSaveActionPerformed
      
        if (transaction==1)
        { 
                if(txtBoxDepID.getText().length()>0 
                 &&txtBoxDepFName.getText().length()>0
                 &&txtBoxDepMName.getText().length()>0
                 &&txtBoxDepLName.getText().length()>0
                 &&txtBoxDepRelation.getText().length()>0
                 && txtEmpID.getText().length()>0)
        {
  
            
        updateDep();
        clearFields();
        displayTable();
        setViewFalse();
        txtBoxDepID.setEnabled(false);
        transaction=0;
        
        }
                else{
                    JOptionPane.showMessageDialog(null,"Some Fields Are Empty");   
                    }
        }
        
        else
        {       
         if(txtBoxDepID.getText().length()>0 
                 &&txtBoxDepFName.getText().length()>0
                 &&txtBoxDepMName.getText().length()>0
                 &&txtBoxDepLName.getText().length()>0
                 &&txtBoxDepRelation.getText().length()>0
                 && txtEmpID.getText().length()>0)
        {
         addDep();
         
         
         }
         else{
          JOptionPane.showMessageDialog(null,"Some Fields Are Empty");   
         }
       
        }
    }//GEN-LAST:event_btnDepSaveActionPerformed

    private void btnDepExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepExitActionPerformed
        Home as = new Home();
        as.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnDepExitActionPerformed

    private void btnDepDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepDeleteActionPerformed
        int x = tblDependents.getSelectedRow();
        if(txtBoxDepID.getText().length()>0 
                 &&txtBoxDepFName.getText().length()>0
                 &&txtBoxDepMName.getText().length()>0
                 &&txtBoxDepLName.getText().length()>0
                 &&txtBoxDepRelation.getText().length()>0
                 && txtEmpID.getText().length()>0)
        {
        deleteDep(dtm.getValueAt(x,0).toString());
        dtm.removeRow(tblDependents.getSelectedRow());
        clearFields();
        }
        
        else{JOptionPane.showMessageDialog(null,"Select row from table to delete!"); }
    }//GEN-LAST:event_btnDepDeleteActionPerformed

    private void btnEmpIDSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpIDSearchActionPerformed
       flag =0;
       EmployeeSearch as = new EmployeeSearch(this, false);
       this.dispose();
       as.setVisible(true);
    }//GEN-LAST:event_btnEmpIDSearchActionPerformed

    private void tblDependentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDependentsMouseClicked
       transaction=1;
       
       setViewTrue();
       txtBoxDepID.setText(dtm.getValueAt(tblDependents.getSelectedRow(),0).toString());
       txtBoxDepFName.setText(dtm.getValueAt(tblDependents.getSelectedRow(),1).toString());
       txtBoxDepMName.setText(dtm.getValueAt(tblDependents.getSelectedRow(),2).toString());
       txtBoxDepLName.setText(dtm.getValueAt(tblDependents.getSelectedRow(),3).toString());
       txtBoxDepRelation.setText(dtm.getValueAt(tblDependents.getSelectedRow(),4).toString());
       txtEmpID.setText(dtm.getValueAt(tblDependents.getSelectedRow(),5).toString());
       txtBoxDepID.setEnabled(false);
    }//GEN-LAST:event_tblDependentsMouseClicked

    private void btnDepSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepSearchActionPerformed
       nameS = txtBoxDepLName.getText().toString().trim();
       txtBoxDepLName.setEnabled(true);
       displayTableSearch();
       clearFields();
    }//GEN-LAST:event_btnDepSearchActionPerformed

    private void txtEmpIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpIDActionPerformed
        
    }//GEN-LAST:event_txtEmpIDActionPerformed

    private void txtBoxDepIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBoxDepIDActionPerformed
       
    }//GEN-LAST:event_txtBoxDepIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dependents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dependents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dependents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dependents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dependents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDepDelete;
    private javax.swing.JButton btnDepExit;
    private javax.swing.JButton btnDepSave;
    private javax.swing.JButton btnDepSearch;
    private javax.swing.JButton btnEmpIDSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDependents;
    private javax.swing.JTextField txtBoxDepFName;
    private javax.swing.JTextField txtBoxDepID;
    private javax.swing.JTextField txtBoxDepLName;
    private javax.swing.JTextField txtBoxDepMName;
    private javax.swing.JTextField txtBoxDepRelation;
    public javax.swing.JTextField txtEmpID;
    // End of variables declaration//GEN-END:variables

    private void displayTable() {
     YBLTSconnectionDB d = new YBLTSconnectionDB();
     d.main();
  
    Statement stmt = null;
    String sql;  
        
    try {
            stmt=d.conn.createStatement();
             sql="SELECT Dependent_ID,Dep_fname,Dep_mname,Dep_lname,Rel_to_emp,Employee_ID FROM dependents WHERE Status IS NULL";
             ResultSet rs = stmt.executeQuery(sql);
             
             dtm = new DefaultTableModel();
             tblDependents.setModel(dtm);
             dtm.addColumn("Dependent ID");
             dtm.addColumn("Firstname");
             dtm.addColumn("Middlename");
             dtm.addColumn("Lastname");
             dtm.addColumn("Relation to Employee");
             dtm.addColumn("Employee ID");
             
             while(rs.next()){
               Object[] ob = {
               rs.getString("Dependent_ID"),
               rs.getString("Dep_fname"),
               rs.getString("Dep_mname"),
               rs.getString("Dep_lname") , 
               rs.getString("Rel_to_emp"),
               rs.getString("Employee_ID")
               };
               dtm.addRow(ob);
               
             }
        } catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }

    private void addDep() {
       
        
        String id = txtBoxDepID.getText();
        String fname = txtBoxDepFName.getText();
        String mname = txtBoxDepMName.getText();
        String lname= txtBoxDepLName.getText();
        String rel = txtBoxDepRelation.getText();
        String empid = txtEmpID.getText();
        
        YBLTSconnectionDB d = new YBLTSconnectionDB();
        d.main();
       
        Statement stmt = null;
        String sql;
        
         try{
             
           stmt=d.conn.createStatement();
           sql="SELECT * FROM dependents WHERE (Dep_fname = '"+fname+"' AND Dep_mname = '"+mname+"' AND Dep_lname = '"+lname+"')  AND Status IS NULL";
           ResultSet rs = stmt.executeQuery(sql);
          
           
           
          if(!rs.isBeforeFirst())
        {
          stmt=d.conn.createStatement();
          sql="INSERT INTO `yellowbusdb`.`dependents`(`Dependent_ID`,`Dep_fname`,`Dep_mname`,`Dep_lname`,`Rel_to_emp`,`Employee_ID`)VALUES('"+id+"','"+fname+"','"+mname+"','"+lname+"','"+rel+"','"+empid+"');";
          int success = stmt.executeUpdate(sql);
          clearFields2();
          displayTable(); 
          
                String[] buttons = {"YES","NO"};
                int returnValue = JOptionPane.showOptionDialog(null,"Do You Want To Add Another Dependent?", "NARRATIVE",
                JOptionPane.WARNING_MESSAGE,0,null,buttons,buttons);
                System.out.print(returnValue); 
         
                        if(returnValue==JOptionPane.YES_OPTION){
                            
                               
                               setViewTrue2();
                         }
                             else{
                            clearFields();
                            setViewFalse();

                        }    
        }
          
          else{
          JOptionPane.showMessageDialog(null,"Duplicate Name!");
          txtBoxDepFName.setText(null);
          txtBoxDepMName.setText(null);
          txtBoxDepLName.setText(null);
          txtBoxDepFName.requestFocus();
          
          }
        }catch(SQLException ex) {
              Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
              } 
           
   
         
         
    }

   

    private void updateDep() {
        int x = tblDependents.getSelectedRow();
        String PK = dtm.getValueAt(x,0).toString(); 
        String id = txtBoxDepID.getText();
        String fname = txtBoxDepFName.getText();
        String mname = txtBoxDepMName.getText();
        String lname = txtBoxDepLName.getText();
        String rel = txtBoxDepRelation.getText();
        String empid = txtEmpID.getText();
        
        YBLTSconnectionDB d = new YBLTSconnectionDB();
        d.main();
        PreparedStatement stmt = null;
        String sql;

        try {
         sql = "UPDATE `yellowbusdb`.`dependents` SET `Dep_fname`=?,`Dep_mname`=?,`Dep_lname`=?,`Rel_to_emp`=?,`Employee_ID`=?,`Dependent_ID`=? WHERE `Dependent_ID`=?";
         stmt = d.conn.prepareStatement(sql);   
         
         
         stmt.setString(1, fname);
         stmt.setString(2, mname);
         stmt.setString(3, lname);
         stmt.setString(4, rel);
         stmt.setString(5, empid);
         stmt.setString(6, id);
         stmt.setString(7, PK);
    
         int success = stmt.executeUpdate();
         if (success == 1) {
        System.out.println("success");
         dtm.setValueAt(PK, tblDependents.getSelectedRow(), 0);       
         dtm.setValueAt(fname, tblDependents.getSelectedRow(), 1);
         dtm.setValueAt(mname, tblDependents.getSelectedRow(), 2);
         dtm.setValueAt(lname, tblDependents.getSelectedRow(), 3);
         dtm.setValueAt(rel, tblDependents.getSelectedRow(), 4);
         dtm.setValueAt(empid, tblDependents.getSelectedRow(), 5);
         
        }}catch (SQLException ex) {
        Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private void deleteDep(String toString) {
        String[] buttons = {"YES","NO"};
    int returnValue = JOptionPane.showOptionDialog(null,"Do You Want To Delete The Records?", "NARRATIVE",
            JOptionPane.WARNING_MESSAGE,0,null,buttons,buttons);
    System.out.print(returnValue);

    if(returnValue==JOptionPane.YES_OPTION){ 
    int x = tblDependents.getSelectedRow();
        String PK = dtm.getValueAt(x,0).toString(); 
        String id = txtBoxDepID.getText();
        String fname = txtBoxDepFName.getText();
        String mname = txtBoxDepMName.getText();
        String lname = txtBoxDepLName.getText();
        String rel = txtBoxDepRelation.getText();
        String empid = txtEmpID.getText();
        
        YBLTSconnectionDB d = new YBLTSconnectionDB();
        d.main();
        PreparedStatement stmt = null;
        String sql;
        

        try {
         sql = "UPDATE `yellowbusdb`.`dependents` SET `Dep_fname`=?,`Dep_mname`=?,`Dep_lname`=?,`Rel_to_emp`=?,`Employee_ID`=?,`Dependent_ID`=?, `Status`=? WHERE `Dependent_ID`=?";
         
         stmt = d.conn.prepareStatement(sql);   
         
         
         stmt.setString(1, fname);
         stmt.setString(2, mname);
         stmt.setString(3, lname);
         stmt.setString(4, rel);
         stmt.setString(5, empid);
         stmt.setString(6, id);
         stmt.setString(7, status);
         stmt.setString(8, PK);
         
         int success = stmt.executeUpdate();
        
        }catch (SQLException ex) {
        Logger.getLogger(yblts.Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
      else{
        this.dispose();
        yblts.Bus as = new yblts.Bus();
        as.setVisible(true);
    }
   
    }

    private void displayTableSearch() {
    YBLTSconnectionDB d = new YBLTSconnectionDB();
    d.main();
    Statement stmt = null;
    String sql;  
    String stats = null;
    
     try {
            stmt=d.conn.createStatement();
             sql="SELECT Dependent_ID,Dep_fname,Dep_mname,Dep_lname,Rel_to_emp,Employee_ID FROM dependents WHERE Dep_lname LIKE  '"+txtBoxDepLName.getText().toString()+"%' AND Status IS NULL";
             ResultSet rs = stmt.executeQuery(sql);
             
             dtm = new DefaultTableModel();
             tblDependents.setModel(dtm);
             dtm.addColumn("Dependent ID");
             dtm.addColumn("Firstname");
             dtm.addColumn("Middlename");
             dtm.addColumn("Lastname");
             dtm.addColumn("Relation to Employee");
             dtm.addColumn("Employee ID");
             
             while(rs.next()){
               Object[] ob = {
               rs.getString("Dependent_ID"),
               rs.getString("Dep_fname"),
               rs.getString("Dep_mname"),
               rs.getString("Dep_lname") , 
               rs.getString("Rel_to_emp"),
               rs.getString("Employee_ID")
               };
               dtm.addRow(ob);
               
             }
        } catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
        }  
    
    
    }

    private void setViewFalse() {
        txtBoxDepID.setEnabled(false);
        txtBoxDepFName.setEnabled(false);
        txtBoxDepMName.setEnabled(false);
        txtBoxDepLName.setEnabled(false);
        txtBoxDepRelation.setEnabled(false);
        //btnDepSearch.setEnabled(false);    
    }

    private void setViewTrue() {
        txtBoxDepFName.setEnabled(true);
        txtBoxDepMName.setEnabled(true);
        txtBoxDepLName.setEnabled(true);
        txtBoxDepRelation.setEnabled(true);
        btnDepSearch.setEnabled(true);    
    }
    
     private void clearFields() {
        txtBoxDepID.setText(null);
        txtBoxDepFName.setText(null);
        txtBoxDepMName.setText(null);
        txtBoxDepLName.setText(null);
        txtBoxDepRelation.setText(null);
        txtEmpID.setText(null);
    }

    private void clearFields2() {
       
        txtBoxDepFName.setText(null);
        txtBoxDepMName.setText(null);
        txtBoxDepLName.setText(null);
        txtBoxDepRelation.setText(null);}

   private void setViewTrue2() {
        txtBoxDepID.setEnabled(true);
        txtBoxDepFName.setEnabled(true);
        txtBoxDepMName.setEnabled(true);
        txtBoxDepLName.setEnabled(true);
        txtBoxDepRelation.setEnabled(true);
        btnDepSearch.setEnabled(true);    
    }

}
